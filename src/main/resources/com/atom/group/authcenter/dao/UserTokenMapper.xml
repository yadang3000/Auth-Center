<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.atom.group.authcenter.dao.UserTokenMapper">
  <resultMap id="BaseResultMap" type="com.atom.group.authcenter.entity.UserToken">
    <constructor>
      <arg column="user_token_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="token" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="check_in_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="expire_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="bind_ip" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="refresh_token" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="login_type" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="third_code" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="status" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="application_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="client_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="user_id" javaType="java.lang.Long" jdbcType="BIGINT" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_token_id, token, check_in_time, expire_time, bind_ip, refresh_token, login_type, 
    third_code, status, application_id, client_id, user_id
  </sql>
  <select id="selectByExample" parameterType="com.atom.group.authcenter.entity.UserTokenExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from uc_user_token
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.atom.group.authcenter.entity.UserTokenExample">
    delete from uc_user_token
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.atom.group.authcenter.entity.UserToken">
    insert into uc_user_token (user_token_id, token, check_in_time, 
      expire_time, bind_ip, refresh_token, 
      login_type, third_code, status, 
      application_id, client_id, user_id
      )
    values (#{userTokenId,jdbcType=BIGINT}, #{token,jdbcType=VARCHAR}, #{checkInTime,jdbcType=TIMESTAMP}, 
      #{expireTime,jdbcType=TIMESTAMP}, #{bindIp,jdbcType=VARCHAR}, #{refreshToken,jdbcType=VARCHAR}, 
      #{loginType,jdbcType=TINYINT}, #{thirdCode,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, 
      #{applicationId,jdbcType=BIGINT}, #{clientId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.atom.group.authcenter.entity.UserToken">
    insert into uc_user_token
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userTokenId != null">
        user_token_id,
      </if>
      <if test="token != null">
        token,
      </if>
      <if test="checkInTime != null">
        check_in_time,
      </if>
      <if test="expireTime != null">
        expire_time,
      </if>
      <if test="bindIp != null">
        bind_ip,
      </if>
      <if test="refreshToken != null">
        refresh_token,
      </if>
      <if test="loginType != null">
        login_type,
      </if>
      <if test="thirdCode != null">
        third_code,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="applicationId != null">
        application_id,
      </if>
      <if test="clientId != null">
        client_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userTokenId != null">
        #{userTokenId,jdbcType=BIGINT},
      </if>
      <if test="token != null">
        #{token,jdbcType=VARCHAR},
      </if>
      <if test="checkInTime != null">
        #{checkInTime,jdbcType=TIMESTAMP},
      </if>
      <if test="expireTime != null">
        #{expireTime,jdbcType=TIMESTAMP},
      </if>
      <if test="bindIp != null">
        #{bindIp,jdbcType=VARCHAR},
      </if>
      <if test="refreshToken != null">
        #{refreshToken,jdbcType=VARCHAR},
      </if>
      <if test="loginType != null">
        #{loginType,jdbcType=TINYINT},
      </if>
      <if test="thirdCode != null">
        #{thirdCode,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="applicationId != null">
        #{applicationId,jdbcType=BIGINT},
      </if>
      <if test="clientId != null">
        #{clientId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.atom.group.authcenter.entity.UserTokenExample" resultType="java.lang.Long">
    select count(*) from uc_user_token
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update uc_user_token
    <set>
      <if test="record.userTokenId != null">
        user_token_id = #{record.userTokenId,jdbcType=BIGINT},
      </if>
      <if test="record.token != null">
        token = #{record.token,jdbcType=VARCHAR},
      </if>
      <if test="record.checkInTime != null">
        check_in_time = #{record.checkInTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.expireTime != null">
        expire_time = #{record.expireTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.bindIp != null">
        bind_ip = #{record.bindIp,jdbcType=VARCHAR},
      </if>
      <if test="record.refreshToken != null">
        refresh_token = #{record.refreshToken,jdbcType=VARCHAR},
      </if>
      <if test="record.loginType != null">
        login_type = #{record.loginType,jdbcType=TINYINT},
      </if>
      <if test="record.thirdCode != null">
        third_code = #{record.thirdCode,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.applicationId != null">
        application_id = #{record.applicationId,jdbcType=BIGINT},
      </if>
      <if test="record.clientId != null">
        client_id = #{record.clientId,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update uc_user_token
    set user_token_id = #{record.userTokenId,jdbcType=BIGINT},
      token = #{record.token,jdbcType=VARCHAR},
      check_in_time = #{record.checkInTime,jdbcType=TIMESTAMP},
      expire_time = #{record.expireTime,jdbcType=TIMESTAMP},
      bind_ip = #{record.bindIp,jdbcType=VARCHAR},
      refresh_token = #{record.refreshToken,jdbcType=VARCHAR},
      login_type = #{record.loginType,jdbcType=TINYINT},
      third_code = #{record.thirdCode,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=TINYINT},
      application_id = #{record.applicationId,jdbcType=BIGINT},
      client_id = #{record.clientId,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>