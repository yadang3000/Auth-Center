<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.atom.group.authcenter.dao.ThirdUserMapper">
  <resultMap id="BaseResultMap" type="com.atom.group.authcenter.entity.ThirdUser">
    <constructor>
      <arg column="third_user_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="third_system_id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="third_access_token" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="third_code" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="check_in_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="status" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="user_id" javaType="java.lang.Long" jdbcType="BIGINT" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    third_user_id, third_system_id, third_access_token, third_code, check_in_time, status, 
    user_id
  </sql>
  <select id="selectByExample" parameterType="com.atom.group.authcenter.entity.ThirdUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from uc_third_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.atom.group.authcenter.entity.ThirdUserExample">
    delete from uc_third_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.atom.group.authcenter.entity.ThirdUser">
    insert into uc_third_user (third_user_id, third_system_id, third_access_token, 
      third_code, check_in_time, status, 
      user_id)
    values (#{thirdUserId,jdbcType=BIGINT}, #{thirdSystemId,jdbcType=VARCHAR}, #{thirdAccessToken,jdbcType=VARCHAR}, 
      #{thirdCode,jdbcType=VARCHAR}, #{checkInTime,jdbcType=TIMESTAMP}, #{status,jdbcType=TINYINT}, 
      #{userId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.atom.group.authcenter.entity.ThirdUser">
    insert into uc_third_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="thirdUserId != null">
        third_user_id,
      </if>
      <if test="thirdSystemId != null">
        third_system_id,
      </if>
      <if test="thirdAccessToken != null">
        third_access_token,
      </if>
      <if test="thirdCode != null">
        third_code,
      </if>
      <if test="checkInTime != null">
        check_in_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="userId != null">
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="thirdUserId != null">
        #{thirdUserId,jdbcType=BIGINT},
      </if>
      <if test="thirdSystemId != null">
        #{thirdSystemId,jdbcType=VARCHAR},
      </if>
      <if test="thirdAccessToken != null">
        #{thirdAccessToken,jdbcType=VARCHAR},
      </if>
      <if test="thirdCode != null">
        #{thirdCode,jdbcType=VARCHAR},
      </if>
      <if test="checkInTime != null">
        #{checkInTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.atom.group.authcenter.entity.ThirdUserExample" resultType="java.lang.Long">
    select count(*) from uc_third_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update uc_third_user
    <set>
      <if test="record.thirdUserId != null">
        third_user_id = #{record.thirdUserId,jdbcType=BIGINT},
      </if>
      <if test="record.thirdSystemId != null">
        third_system_id = #{record.thirdSystemId,jdbcType=VARCHAR},
      </if>
      <if test="record.thirdAccessToken != null">
        third_access_token = #{record.thirdAccessToken,jdbcType=VARCHAR},
      </if>
      <if test="record.thirdCode != null">
        third_code = #{record.thirdCode,jdbcType=VARCHAR},
      </if>
      <if test="record.checkInTime != null">
        check_in_time = #{record.checkInTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update uc_third_user
    set third_user_id = #{record.thirdUserId,jdbcType=BIGINT},
      third_system_id = #{record.thirdSystemId,jdbcType=VARCHAR},
      third_access_token = #{record.thirdAccessToken,jdbcType=VARCHAR},
      third_code = #{record.thirdCode,jdbcType=VARCHAR},
      check_in_time = #{record.checkInTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=TINYINT},
      user_id = #{record.userId,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>